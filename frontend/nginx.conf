server {
    listen 8080;
    server_name localhost;
    resolver 127.0.0.11 valid=30s;
    
    root /usr/share/nginx/html;
    index index.html;
    
    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    
    # Handle Vue.js routing
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # API proxy (with fallback for when API is not available)
    location /api {
        set $backend "api:3000";
        proxy_pass http://$backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Fallback when API is not available
        error_page 502 503 504 = @api_fallback;
    }
    
    # Fallback location for API errors
    location @api_fallback {
        add_header Content-Type application/json;
        return 503 '{"error": "API service temporarily unavailable", "status": 503}';
    }
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
}