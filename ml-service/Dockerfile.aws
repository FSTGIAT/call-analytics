# Multi-stage build for Call Analytics ML Service - AWS Production Version
FROM python:3.11-slim AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage with CUDA support
FROM nvidia/cuda:11.8-runtime-ubuntu22.04

# Install Python, runtime dependencies, and AWS CLI
RUN apt-get update && apt-get install -y \
    python3.11 \
    python3-pip \
    python3.11-distutils \
    curl \
    jq \
    bash \
    awscli \
    && rm -rf /var/lib/apt/lists/* \
    && update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1 \
    && update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 1

# Set working directory
WORKDIR /app

# Copy Python packages from builder
COPY --from=builder /root/.local /home/appuser/.local

# Make sure scripts in .local are usable:
ENV PATH=/home/appuser/.local/bin:$PATH

# Create app user (non-root for security)
RUN useradd --create-home --shell /bin/bash appuser && \
    chown -R appuser:appuser /app

# Copy application code
COPY --chown=appuser:appuser . .

# Copy AWS entrypoint script
COPY --chown=appuser:appuser entrypoint-aws.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint-aws.sh

# Create necessary directories
RUN mkdir -p /app/logs /app/models /app/cache && \
    chown -R appuser:appuser /app

# Switch to app user
USER appuser

# Set Python path
ENV PYTHONPATH=/app:$PYTHONPATH

# CUDA/PyTorch optimizations
ENV CUDA_VISIBLE_DEVICES=0
ENV PYTORCH_CUDA_ALLOC_CONF=max_split_size_mb:512

# HuggingFace cache directory
ENV HF_HOME=/app/cache/huggingface
ENV TRANSFORMERS_CACHE=/app/cache/huggingface
ENV HF_DATASETS_CACHE=/app/cache/huggingface/datasets

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=120s --retries=3 \
    CMD curl -f http://localhost:5000/health || exit 1

# Expose port
EXPOSE 5000

# Use AWS-aware entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint-aws.sh"]
CMD ["python", "app.py"]