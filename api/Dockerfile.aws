# Multi-stage build for Call Analytics API - AWS Production Version
FROM node:18-alpine AS builder

# Install build dependencies and AWS CLI
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    aws-cli \
    jq \
    bash \
    curl \
    && rm -rf /var/cache/apk/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production --silent

# Copy source code
COPY . .

# Production stage
FROM node:18-alpine

# Install runtime dependencies, Oracle Instant Client, and AWS CLI
RUN apk add --no-cache \
    aws-cli \
    jq \
    bash \
    curl \
    libaio \
    libnsl \
    libc6-compat \
    && rm -rf /var/cache/apk/*

# Install Oracle Instant Client
WORKDIR /opt/oracle
RUN curl -o instantclient-basic-linux.x64-21.12.0.0.0dbru.zip \
    https://download.oracle.com/otn_software/linux/instantclient/2112000/instantclient-basic-linux.x64-21.12.0.0.0dbru.zip \
    && unzip instantclient-basic-linux.x64-21.12.0.0.0dbru.zip \
    && rm instantclient-basic-linux.x64-21.12.0.0.0dbru.zip \
    && ln -s /opt/oracle/instantclient_21_12 /opt/oracle/instantclient

# Set Oracle environment variables
ENV LD_LIBRARY_PATH=/opt/oracle/instantclient:$LD_LIBRARY_PATH
ENV ORACLE_CLIENT_DIR=/opt/oracle/instantclient

# Create app directory
WORKDIR /app

# Copy from builder stage
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package*.json ./
COPY --from=builder /app/src ./src
COPY --from=builder /app/tsconfig.json ./

# Copy AWS entrypoint script
COPY entrypoint-aws.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/entrypoint-aws.sh

# Create log directory
RUN mkdir -p /app/logs && chown -R node:node /app

# Set user
USER node

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/api/v1/health || exit 1

# Expose port
EXPOSE 3000

# Use AWS-aware entrypoint
ENTRYPOINT ["/usr/local/bin/entrypoint-aws.sh"]
CMD ["node", "src/index.js"]